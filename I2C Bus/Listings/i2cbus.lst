C51 COMPILER V9.60.0.0   I2CBUS                                                            10/27/2022 10:04:53 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE I2CBUS
OBJECT MODULE PLACED IN .\Objects\i2cbus.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2cbus.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i2
                    -cbus.lst) TABS(2) OBJECT(.\Objects\i2cbus.obj)

line level    source

   1          #include <reg51.h>
   2          #include <stdio.h>
   3          #include <intrins.h> //contains prototypes for routines that instruct the compiler to generate intrinsic c
             -ode.
   4          
   5          #define ACK 1
   6          #define NO_ACK 0
   7          
   8          unsigned char EData[5];
   9          unsigned char Data;
  10          void InitSerial(void);
  11          void DelayMs(unsigned int);
  12          
  13          void WriteI2C(unsigned char);
  14          unsigned char ReadI2C(bit);
  15          
  16          void Start();//start the sequence 
  17          void Stop();//stop the sequence 
  18          
  19          void ReadBYTE(unsigned int);
  20          void WriteBYTE(unsigned int);
  21          
  22          sbit SCL = P2^0; //connect to SCL pin (Clock)
  23          sbit SDA = P2^1; //connect to SDA pin (Data)
  24          
  25          //Main Program
  26          
  27          void main(void)
  28          {
  29   1        unsigned int i;
  30   1        InitSerial(); //initialize serial port
  31   1        
  32   1        putchar(0x0C); //clear hyper terminal
  33   1        
  34   1        DelayMs(5);
  35   1        
  36   1        WriteBYTE(0x0000);
  37   1        
  38   1        WriteI2C('8'); //Write Data Here
  39   1        WriteI2C('0');
  40   1        WriteI2C('5');
  41   1        WriteI2C('1');
  42   1        
  43   1        Stop();
  44   1        DelayMs(10);
  45   1        
  46   1        ReadBYTE(0x0000);
  47   1        EData[0] = ReadI2C(NO_ACK);
  48   1        EData[1] = ReadI2C(NO_ACK);
  49   1        EData[2] = ReadI2C(NO_ACK);
  50   1        EData[3] = ReadI2C(NO_ACK);
  51   1        
  52   1        for (i = 0; i < 4; i++)
  53   1        {
C51 COMPILER V9.60.0.0   I2CBUS                                                            10/27/2022 10:04:53 PAGE 2   

  54   2          printf("%c",EData[i]); //Display the data
  55   2          DelayMs(100);
  56   2        }
  57   1        
  58   1        while(1);
  59   1      }
  60          
  61          //Initialize the serial port
  62          void InitSerial(void)
  63          {
  64   1        SCON = 0x52; //Serial control
  65   1        TMOD = 0x20; //hardware 9600 Baud @11.0592MHZ
  66   1        TH1 = 0xFD; //Baud rate
  67   1        TR1 = 1; //Timer mode On
  68   1      
  69   1      }
  70          
  71          //Start sequence in the I2C 
  72          void Start(void)
  73          {
  74   1        SDA =  1; //Serial data line value
  75   1        SCL = 1; //Serial clock line value
  76   1        _nop_();_nop_();//The _nop_ routine inserts a NOP instruction into the program. This routine can be used 
             -to pause for 1 CPU cycle. This routine is implemented as an intrinsic function. The NOP instruction is included inline.
  77   1        SDA = 0;
  78   1        _nop_();_nop_();
  79   1        SCL = 0;
  80   1        _nop_();_nop_();
  81   1        
  82   1        
  83   1      }
  84          
  85          //Stop sequence in the I2C 
  86          void Stop(void)
  87          {
  88   1        SDA = 0;
  89   1        _nop_();_nop_();
  90   1        SCL = 1;
  91   1        _nop_();_nop_();
  92   1        SDA = 1;
  93   1      }
  94          
  95          //Write in I2C
  96          void WriteI2C(unsigned char Data)
  97          {
  98   1        unsigned int i;
  99   1        for (i = 0; i < 8; i++)
 100   1        {
 101   2          SDA = (Data & 0x80);
 102   2          SCL = 1;
 103   2          SCL = 0;
 104   2          Data <<= 1;
 105   2          
 106   2        }
 107   1        SCL = 1;
 108   1        _nop_();_nop_();
 109   1        SCL = 0;
 110   1      }
 111          
 112          //Read in I2C
 113          unsigned char ReadI2C(bit ACK_Bit)
 114          {
C51 COMPILER V9.60.0.0   I2CBUS                                                            10/27/2022 10:04:53 PAGE 3   

 115   1        unsigned int i;
 116   1        Start();
 117   1        WriteI2C(0xA1);
 118   1        
 119   1        SDA = 1;
 120   1        
 121   1        for (i = 0; i < 8; i++)
 122   1        {
 123   2          SCL = 1;
 124   2          Data<<=1;
 125   2          Data = (Data | SDA);
 126   2          SCL = 0;
 127   2          _nop_();
 128   2        }
 129   1        
 130   1        if(ACK_Bit == 1)
 131   1        {
 132   2          SDA = 0; //Send ACK 
 133   2        }
 134   1        else
 135   1        {
 136   2          SDA = 1; //Send No ACK
 137   2        }
 138   1        
 139   1        _nop_();_nop_();
 140   1        SCL = 1;
 141   1        _nop_();_nop_();
 142   1        SCL = 0;
 143   1        Stop();
 144   1        
 145   1        return Data;
 146   1      }
 147          
 148          //read one byte from I2C
 149          void ReadBYTE(unsigned int Addr)
 150          {
 151   1        Start();
 152   1        WriteI2C(0xA0);
 153   1        WriteI2C((unsigned char)(Addr>>8)&0xFF);
 154   1        WriteI2C((unsigned char)Addr & 0xFF);
 155   1        
 156   1        
 157   1      }
 158          
 159          //Write one byte from I2C
 160          void WriteBYTE(unsigned int Addr)
 161          {
 162   1        Start();
 163   1        WriteI2C(0xA0);
 164   1        WriteI2C((unsigned char)(Addr>>8)&0xFF); //send Address high
 165   1        WriteI2C((unsigned char)Addr & 0xFF); //Send Address low
 166   1        
 167   1      }
 168          void DelayMs(unsigned int count)
 169          {
 170   1        unsigned int i;
 171   1        while (count)
 172   1        {
 173   2          i = 110;
 174   2          while(i > 0)
 175   2          {
 176   3            count--;
C51 COMPILER V9.60.0.0   I2CBUS                                                            10/27/2022 10:04:53 PAGE 4   

 177   3          }
 178   2        }
 179   1      }
 180          
 181          
 182          
 183          
 184          
 185          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =      3    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
